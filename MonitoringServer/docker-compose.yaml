version: '3'
services:

  nginx:
    container_name: nginx
    image: nginx:1.15-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/log/nginx:/var/log/nginx
      - ./data/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./data/nginx/proxy.conf:/etc/nginx/proxy.conf
      - ./data/nginx/mime.type:/etc/nginx/mime.type
      - /etc/letsencrypt/:/etc/letsencrypt/
    networks:
      - monitoring-network
    depends_on:
      - grafana
      - prometheus
      - loki

  grafana:
    image: grafana/grafana:8.4.3
    container_name: grafana
    user: "0"
    restart: always
    environment:
      - DATABASE_HOSTNAME=$DATABASE_HOSTNAME
      - DATABASE_PASSWORD=$DATABASE_PASSWORD
    ports:
     - 3000:3000
    volumes:
      - ./data/grafana/internal/:/var/lib/grafana/
      - ./data/grafana/provisioning/:/etc/grafana/provisioning/
      - ./data/grafana/dashboards/:/etc/grafana/dashboards/
    networks:
      - monitoring-network

  prometheus:
    image: prom/prometheus:v2.33.5
    container_name: prometheus
    user: "0"
    restart: always
    volumes:
      - ./data/prometheus/config/:/etc/prometheus/
      - ./data/prometheus/interal:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090

    networks:
      - monitoring-network

  loki:
    image: grafana/loki:2.4.2
    container_name: loki
    user: "0"
    volumes:
      - ./docker-data/loki/config/:/etc/loki/
      - ./docker-data/loki/internal/:/tmp/loki/
    command: -config.file=/etc/loki/loki.yaml
    networks:
      - monitoring-network
    
  
  node_exporter:
    image: prom/node-exporter:v1.3.1
    container_name: node_exporter
    restart: always
    pid: host
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    networks:
      - monitoring-network
    

networks:
  monitoring-network:
